Post Mortem: Webserver http://3.69.26.193

Документация по инциденту
Дата: 05.08.2025
Время начала инцидента: около ~09:00
Время полного восстановления: ~10:30

1. Что было? — Описание инцидента
Утром 5 августа 2025 года веб-сайт, размещённый на EC2-сервере AWS, перестал открываться.
При переходе по адресу http://3.69.26.193 отображалась ошибка:
$wgServer must be set in LocalSettings.php
See https://www.mediawiki.org/wiki/Manual:$wgServer

В процессе диагностики выяснилось, что одновременно произошло три критические неисправности:
-Некорректный конфигурационный файл LocalSettings.php — MediaWiki не знала, на какой адрес ссылаться.
-Переполнение диска /var/log из-за рекурсивной cron-задачи.
-Смена публичного IP-адреса после перезапуска EC2, что ломало доступ к сайту.

2. Как я с этой проблемой разобрался? — Ход работ
2.1. Исправление конфигурации MediaWiki
Подключился к серверу:
ssh -i ~/.ssh/ich.pem ec2-user@3.69.26.193
Нашёл корректный файл LocalSettings (5).php и скопировал его в рабочую директорию:
cp LocalSettings\ \(5\).php /var/www/html/MediaWiki/LocalSettings.php
Перезапустил веб-сервер:
sudo systemctl restart httpd

2.2. Освобождение диска
При копировании файла получил ошибку:
No space left on device
Проверил дисковое пространство:
df -h
Нашёл огромный лог /var/log/httpd/access_log-20250804 (7 GB).
Удалил тяжёлые логи:
sudo rm -rf /var/log/httpd/access_log-20250804
sudo rm -rf /var/log/httpd/access_log-20240402
Система освободила ~7 GB.

2.3. Исправление IP-адреса
После перезапуска EC2 получил новый IP 18.153.51.162.
Открыл конфиг:
nano /var/www/html/MediaWiki/LocalSettings.php
Исправил строку:
$wgServer = "http://3.69.26.193"
Перезапустил сервер:
sudo systemctl restart httpd

2.4. Удаление проблемной cron-задачи
Нашёл задачу, запускавшую каждую минуту:
* * * * * tar -czf /var/log/httpd/log_$(date +\%Y\%m\%d).tar.gz -C /var/log/httpd .
Она архивировала папку с логами, включая сама себя, что вызывало рекурсивный рост файлов.
Решение:
sudo crontab -e
# закомментировал проблемную строку
Удалил созданные архивы:
sudo rm -rf /var/log/httpd/log_*.tar.gz


3.Настроен backup-скрипт: /home/ec2-user/backup_log_http.sh

#!/bin/bash  #Указываем, что скрипт должен исполняться через bash

LOG_DIR="/var/log/httpd"  #Переменная что мы архивируем
BACKUP_DIR="/home/ec2-user/backup"  #Папка, куда сохранять архивы
DATE=$(date +%Y%m%d-%H%M)  #Текущая дата и время в формате ГГГГ ММ ДД-ЧЧ:ММ
ARCHIVE="$BACKUP_DIR/Loghttp-$DATE.tar.gz"  #Полный путь и имя архива с логами

mkdir -p "$BACKUP_DIR"  # Создаём папку для бэкапов, если она ещё не существует

sudo tar -czf $ARCHIVE $LOG_DIR  # Архивируем папку с логами в .tar.gz архив
sudo systemctl stop httpd  # Останавливаем httpd, чтобы безопасно удалить логи
sudo rm -rf "$LOG_DIR/access_log"  # Удаляем access_log, остальные логи не трогаем

find "$BACKUP_DIR" -type f -name "Loghttp*.gz" -mtime +3 -exec rm -rf {} \;  #Удаляем архивы старше 3 дней, чтобы не заполняли диск


Сделал исполняемым:
chmod +x backup_log_http.sh

Добавил в планировщик:
sudo crontab -e
0 3 * * * /home/ec2-user/backup_log_http.sh

4. Итог
После:
-восстановления корректного LocalSettings.php
-удаления лишних логов
-правки IP-адреса
-отключения вредной cron-задачи
-настройки автоматического бэкапа
сайт снова стабильно работает по адресу http://3.69.26.193.


5. Что бы я советовал, чтобы это больше не произошло
-Включить мониторинг доступности сайта с уведомлениями в Telegram/E-Mail.
-Вести журнал изменений на сервере (git-репозиторий для конфигов).
-Раз в месяц проводить плановую проверку:
-Доступность сайта
-Состояние диска
-Логи ошибок
-Список cron-задач


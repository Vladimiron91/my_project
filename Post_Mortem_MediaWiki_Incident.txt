Post Mortem: Webserver http://3.69.26.193

Дата инцидента:
05.08.2025, начало в 09:00

Что произошло?
Утром 5 августа сайт, развернутый на EC2-сервере AWS, стал недоступен. При открытии URL http://3.69.26.193 отображалась ошибка:

$wgServer must be set in LocalSettings.php See https://www.mediawiki.org/wiki/Manual:$wgServer

Позже выяснилось, что одновременно возникли три основные проблемы:
1.Пропавший или некорректный конфигурационный файл LocalSettings.php
2.Полное заполнение диска /var/log из-за рекурсивной cron-задачи
3.Смена публичного IP-адреса после перезапуска EC2-сервера, вызвавшая переадресацию на несуществующий адрес

Как я решил проблему
1. Подключение и диагностика:
Подключился к серверу через Git Bash:
ssh -i ~/.ssh/ich.pem ec2-user@3.69.26.193

Проверил сайт — ошибка конфигурации. Нашёл нужный файл LocalSettings (5).php и скопировал его в нужную директорию:
cp LocalSettings\ \(5\).php /var/www/html/MediaWiki/LocalSettings.php

Перезапустил веб-сервер:
sudo systemctl restart httpd

2. Ошибка «No space left on device»
При попытке копирования конфигурационного файла система выдала ошибку:
cannot create temp file for here-document: No space left on device

Проверка использования диска:
df -h

Обнаружен файл /var/log/httpd/access_log-20250804 размером 7 GB — причина переполнения.
Удалил тяжёлые логи:
sudo rm -rf /var/log/httpd/access_log-20250804
sudo rm -rf /var/log/httpd/access_log-20240402
После этого система освободила 7 GB.

3. Проблема с IP-адресом после перезапуска
После перезапуска сервера назначил новый IP:
18.153.51.162

Проверка и редактирование файла LocalSettings.php:
nano /var/www/html/MediaWiki/LocalSettings.php

Изменяю строку:
$wgServer = "https://18.153.51.162" на: $wgServer = "http://3.69.26.193"

5. Проблема с cron-задачей:
Найдена вредоносная задача:
* * * * * tar -czf /var/log/httpd/log_$(date +\%Y\%m\%d).tar.gz -C /var/log/httpd .
Она запускалась каждую минуту, создавая архивы и включая в них самих себя — из-за чего происходила рекурсия и заполнялся диск.

Решение:
Открытие и редактирование:
sudo crontab -e
Закомментировал строку:
# * * * * * tar -czf …
Удалены существующие ненужные архивы:
sudo rm -rf /var/log/httpd/log_*.tar.gz

Итог
После:
-восстановления конфигурационного файла
-удаления лишних логов
-правки IP-адреса
-отключения кривой cron-задачи
-сайт стал успешно доступен по адресу: "http://3.69.26.193"


Настроен backup-скрипт: /home/ec2-user/backup_log_http.sh

#!/bin/bash  #Указываем, что скрипт должен исполняться через bash

LOG_DIR="/var/log/httpd"  #Переменная что мы архивируем
BACKUP_DIR="/home/ec2-user/backup"  #Папка, куда сохранять архивы
DATE=$(date +%Y%m%d-%H%M)  #Текущая дата и время в формате ГГГГ ММ ДД-ЧЧММ
ARCHIVE="$BACKUP_DIR/Loghttp-$DATE.tar.gz"  #Полный путь и имя архива с логами

mkdir -p "$BACKUP_DIR"  # Создаём папку для бэкапов, если она ещё не существует

sudo tar -czf $ARCHIVE $LOG_DIR  # Архивируем папку с логами в .tar.gz архив
sudo systemctl stop httpd  # Останавливаем httpd, чтобы безопасно удалить логи
sudo rm -rf "$LOG_DIR/access_log"  # Удаляем access_log, остальные логи не трогаем

find "$BACKUP_DIR" -type f -name "Loghttp*.gz" -mtime +3 -exec rm -rf {} \;  #Удаляем архивы старше 3 дней, чтобы не заполняли диск


Сделал исполняемым:
chmod +x backup_log_http.sh

Добавил в планировщик:
sudo crontab -e
0 3 * * * /home/ec2-user/backup_log_http.sh

Рекомендация: 
1.Закупить и назначить IP в AWS, чтобы избежать смены IP-адреса при перезапуске сервера.
2.Настроить и подключить мониторинг:
Проверка доступности сайта и отправки уведомления в мессенджер или на Email

